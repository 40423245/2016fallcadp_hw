var tipuesearch = {"pages":[{"text":"2016Fall 修課成員網誌","tags":"misc","url":"./pages/about/","title":"About"},{"text":"本週為校慶週，停課一次。","tags":"Misc","url":"./20161125-w11.html","title":"2016/11/25 W11"},{"text":"coming soon","tags":"Misc","url":"./20161202-w12.html","title":"2016/12/02 W12"},{"text":"有關 Solvespace 機構模擬功能介紹, 與 Python3 及 Brython 程式驗證 Solvespace 平面四連桿機構模擬 直接利用 Solvespace Analyze-Trace Point-Stop Trace 得到下列繞行路徑: 將所得到的點座標 .csv 以 Excel 畫圖, 得到: Python3 平面四連桿機構模擬: 接下來利用三角函數推導四連桿機構的運動模擬, 即已知長度 18 公分的連桿以逆時針方向旋轉, 希望求三角形頂點的運動座標. 首先利用 Brython, 讀取 data 目錄中的 cadpa_w10_4bar.csv 座標檔案, 然後以 splitlines() 及 split() 取出各點的 x 座標與 y 座標後, 將點連成路徑曲線如下: window.onload=function(){ brython(1); } from browser import document as doc from browser import html import math # 準備繪圖畫布 canvas = doc[\"fourbar\"] container1 = doc['container1'] ctx = canvas.getContext(\"2d\") fourbar_data = open(\"./../data/cadpa_w10_4bar.csv\").read() fourbar_list = fourbar_data.splitlines() #container1 <= fourbar_list[0] # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 利用 transform 將 y 座標反轉, 且 offset canvas.height # (X scale, X skew, Y skew, Y scale, X offset, Y offset) # 配合圖形位置進行座標轉換 ctx.transform(1, 0, 0, -1, canvas.width/2+250, canvas.height/2+100) # 畫出 x 與 y 座標線 # 各座標值放大 8 倍 ratio = 8 ''' ctx.moveTo(0, 0) ctx.lineTo(0, 100) ctx.moveTo(0, 0) ctx.lineTo(100, 0) ''' ctx.moveTo(0, 0) ctx.lineTo(-30*ratio, 0) start_point = fourbar_list[0].split(\",\") ctx.moveTo(float(start_point[0])*ratio, float(start_point[1])*ratio) count = 0 for data in fourbar_list[1:]: point = data.split(\",\") #count = count + 1 #container1 <= str(count) + \":\" + point[0] + \",\" + point[1] #container1 <= html.BR() ctx.lineTo(float(point[0])*ratio, float(point[1])*ratio) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath()","tags":"Misc","url":"./20161118-w10.html","title":"2016/11/18 W10"},{"text":"有關 Solvespace 零件, 組件, 機構模擬等功能介紹, 程式編譯與 API 延伸等 Solvespace Assembly (零件組立)","tags":"Misc","url":"./20161209-w13.html","title":"2016/12/09 W13"},{"text":"coming soon","tags":"Misc","url":"./20160916-w01.html","title":"2016/09/16 W01"},{"text":"coming soon","tags":"Misc","url":"./20160923-w02.html","title":"2016/09/23 W02"},{"text":"coming soon","tags":"Misc","url":"./20160930-w03.html","title":"2016/09/30 W03"},{"text":"coming soon","tags":"Misc","url":"./20161007-w04.html","title":"2016/10/07 W04"},{"text":"coming soon","tags":"Misc","url":"./20161014-w05.html","title":"2016/10/14 W05"},{"text":"已知截至第六週 2016fallcadpb 的分組資料位於倉儲中的 w6_group.txt , 而從學校修課系統下載的修課人員名條則為 w6_list.txt , 請各組著手練習, 找出尚未納入分組的人員名單, 並研擬如何處置上課一個半月卻尚未進入情況的學員? 以下利用 Brython 讀取位於倉儲中的 w6_list.txt 與 w6_group.txt 資料檔案. 表示學校教務系統中, 修 2016fallcadpb 的學員名單為: window.onload=function(){ brython(1); } from browser import document, html container = document['container'] data = open(\"./../w6_list.txt\").read() container <= data 而截至 w6, 納入分組名單中的學員有: from browser import document, html container2 = document['container2'] data = open(\"./../w6_group.txt\").read() container2 <= data 現在, 誰能夠幫我們找出至今尚未納入分組名單中的學員, 共有那些人？ from browser import document, html # 從 id=script1 程式區段取 data 變數 from script1 import data container3 = document['container3'] data3 = open(\"./../w6_group.txt\").read() group = data3.splitlines() # 希望將分組資料轉為學員數列, 令為變數名稱 result_g result_g = [] # 已經註冊者數列設為 registered registered = [] for line in group: # 去除每一行最後的空白成員 sline = line.split(\",\") # 再將各組拆成個別組員後, 串成 result_g for m in sline: result_g.append(m) #container3 <= len(sline) #container3 <= html.BR() #container3 <= len(result_g) registered = data.splitlines()[:-1] # 設法找出至今尚未分組的學員學號 not_in_group = [c for c in registered if c not in result_g] #container3 <= len(registered) -len(result_g) n = 1 for i in not_in_group: container3 <= \"第\"+str(n)+\"位: \"+ str(i) n = n + 1 container3 <= html.BR() 另外, 在推送版本資料時, Github 發出以下錯誤: 發生錯誤的地方在此, 分組倉儲的分支又設為該倉儲的子模組: 處理方式, 先移除 g4, 等錯誤修正後, 再補上來. 移除 g4 步驟: 編輯 .gitmodules, 移除 g4 對應子模組設定 在版本資料納入 .gitmodules 所作的修改, git add .gitmodules 編輯 .git/config , 移除 g4 對應子模組設定 執行 git rm --cached g4 執行 rm -rf .git/modules/g4 執行 rm -rf g4 將近端的改版資料提交推送到遠端 之後, 又發現 g6 設定上也有問題, 因此也要先行移除. 錯誤產生於子模組設定過程, 沒能完整移除先前設定的子模組: 移除 g6 步驟: 編輯 .gitmodules, 移除 g6 對應子模組設定 在版本資料納入 .gitmodules 所作的修改, git add .gitmodules 編輯 .git/config , 移除 g6 對應子模組設定 執行 git rm --cached g6 執行 rm -rf .git/modules/g6 執行 rm -rf g6 將近端的改版資料提交推送到遠端 移除 g6 之後, 又發現 g10 中的組員 40423248 子模組設定錯誤, 倉儲內有不應該存在的 .gitmodules 檔案 因此 g10 也必須移除. 移除 g 10 步驟: 編輯 .gitmodules, 移除 g10 對應子模組設定 在版本資料納入 .gitmodules 所作的修改, git add .gitmodules 編輯 .git/config , 移除 g10 對應子模組設定 執行 git rm --cached g10 執行 rm -rf .git/modules/g10 執行 rm -rf g10 將近端的改版資料提交推送到遠端 此外 g9 組員 也犯相同錯誤, 因此 g9 也需移除. 移除 g 9 步驟: 編輯 .gitmodules, 移除 g9對應子模組設定 在版本資料納入 .gitmodules 所作的修改, git add .gitmodules 編輯 .git/config , 移除 g9 對應子模組設定 執行 git rm --cached g9 執行 rm -rf .git/modules/g9 執行 rm -rf g9 將近端的改版資料提交推送到遠端 因為無法從剩下的各組找到問題, 因此將全部子模組刪除. 加入 g1, 沒有問題. 加入 g2, 沒有問題. 加入 g3, 沒有問題. 已經確定 g7 有問題, 必須移除 移除 g 7 步驟: 編輯 .gitmodules, 移除 g7對應子模組設定 在版本資料納入 .gitmodules 所作的修改, git add .gitmodules 編輯 .git/config , 移除 g7 對應子模組設定 執行 git rm --cached g7 執行 rm -rf .git/modules/g7 執行 rm -rf g7 將近端的改版資料提交推送到遠端 加入 g8, 沒有問題. 加入 g11, 沒有問題. 最後加入 g5, 假如沒有問題, 截至 w6, 只有 g1, g2, g3, g5, g8, 11 等組正確完成設定.","tags":"Misc","url":"./20161021-w06.html","title":"2016/10/21 W06"},{"text":"coming soon","tags":"Misc","url":"./20161028-w07.html","title":"2016/10/28 W07"},{"text":"coming soon","tags":"Misc","url":"./20161104-w08.html","title":"2016/11/04 W08"},{"text":"coming soon","tags":"Misc","url":"./20161111-w09.html","title":"2016/11/11 W09"}]};